version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: go-pos-app
    restart: unless-stopped
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/app
      - /app/tmp # Exclude tmp directory from host mount
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - go-pos-network

  postgres:
    image: postgres:16.9-bookworm
    container_name: go-pos-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - go_pos_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "psql",
          "-U",
          "${DB_USER}",
          "-d",
          "${DB_NAME}",
          "-c",
          "SELECT 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - go-pos-network

  redis:
    image: redis:latest
    container_name: go-pos-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - go_pos_redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - go-pos-network

volumes:
  go_pos_postgres_data:
  go_pos_redis_data:

networks:
  go-pos-network:
    driver: bridge
